{"id":"../node_modules/content/lib/index.js","dependencies":[{"name":"C:\\Users\\ytgg\\Desktop\\React\\package.json","includedInParent":true,"mtime":1569067310650},{"name":"C:\\Users\\ytgg\\Desktop\\React\\node_modules\\content\\package.json","includedInParent":true,"mtime":1569067273964},{"name":"boom","loc":{"line":5,"column":21},"parent":"C:\\Users\\ytgg\\Desktop\\React\\node_modules\\content\\lib\\index.js","resolved":"C:\\Users\\ytgg\\Desktop\\React\\node_modules\\boom\\lib\\index.js"}],"generated":{"js":"'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n/*\n    RFC 7231 Section 3.1.1.1\n\n    media-type = type \"/\" subtype *( OWS \";\" OWS parameter )\n    type       = token\n    subtype    = token\n    parameter  = token \"=\" ( token / quoted-string )\n*/\n\n//                             1: type/subtype    2: params\ninternals.contentTypeRegex = /^([^\\/\\s]+\\/[^\\s;]+)(.*)?$/;\n\n//                                        1: \"b\"   2: b\ninternals.paramsRegex = /;\\s*boundary=(?:\"([^\"]+)\"|([^;\"\\s]+))/i;\n\n\nexports.type = function (header) {\n\n    if (!header) {\n        throw Boom.badRequest('Invalid content-type header');\n    }\n\n    const match = header.match(internals.contentTypeRegex);\n    if (!match) {\n        throw Boom.badRequest('Invalid content-type header');\n    }\n\n    const result = {\n        mime: match[1].toLowerCase()\n    };\n\n    if (result.mime.indexOf('multipart/') === 0) {\n        const params = match[2];\n        if (params) {\n            const param = params.match(internals.paramsRegex);\n            if (param) {\n                result.boundary = param[1] || param[2];\n            }\n        }\n\n        if (!result.boundary) {\n            throw Boom.badRequest('Invalid content-type header: multipart missing boundary');\n        }\n    }\n\n    return result;\n};\n\n\n/*\n    RFC 6266 Section 4.1 (http://tools.ietf.org/html/rfc6266#section-4.1)\n\n    content-disposition = \"Content-Disposition\" \":\" disposition-type *( \";\" disposition-parm )\n    disposition-type    = \"inline\" | \"attachment\" | token                                           ; case-insensitive\n    disposition-parm    = filename-parm | token [ \"*\" ] \"=\" ( token | quoted-string | ext-value)    ; ext-value defined in [RFC5987], Section 3.2\n\n    Content-Disposition header field values with multiple instances of the same parameter name are invalid.\n\n    Note that due to the rules for implied linear whitespace (Section 2.1 of [RFC2616]), OPTIONAL whitespace\n    can appear between words (token or quoted-string) and separator characters.\n\n    Furthermore, note that the format used for ext-value allows specifying a natural language (e.g., \"en\"); this is of limited use\n    for filenames and is likely to be ignored by recipients.\n*/\n\n\ninternals.contentDispositionRegex = /^\\s*form-data\\s*(?:;\\s*(.+))?$/i;\n\n//                                        1: name     2: *            3: ext-value                      4: quoted  5: token\ninternals.contentDispositionParamRegex = /([^\\=\\*\\s]+)(\\*)?\\s*\\=\\s*(?:([^;'\"\\s]+\\'[\\w-]*\\'[^;\\s]+)|(?:\\\"([^\"]*)\\\")|([^;\\s]*))(?:\\s*(?:;\\s*)|$)/g;\n\nexports.disposition = function (header) {\n\n    if (!header) {\n        throw Boom.badRequest('Missing content-disposition header');\n    }\n\n    const match = header.match(internals.contentDispositionRegex);\n    if (!match) {\n        throw Boom.badRequest('Invalid content-disposition header format');\n    }\n\n    const parameters = match[1];\n    if (!parameters) {\n        throw Boom.badRequest('Invalid content-disposition header missing parameters');\n    }\n\n    const result = {};\n    parameters.replace(internals.contentDispositionParamRegex, ($0, $1, $2, $3, $4, $5) => {\n\n        if ($2) {\n            if (!$3) {\n                throw Boom.badRequest('Invalid content-disposition header format includes invalid parameters');\n            }\n\n            try {\n                result[$1] = decodeURIComponent($3.split('\\'')[2]);\n            }\n            catch (err) {\n                throw Boom.badRequest('Invalid content-disposition header format includes invalid parameters');\n            }\n        }\n        else {\n            result[$1] = $4 || $5 || '';\n        }\n    });\n\n    if (!result.name) {\n        throw Boom.badRequest('Invalid content-disposition header missing name parameter');\n    }\n\n    return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/content/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/content/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}}],"sources":{"../node_modules/content/lib/index.js":"'use strict';\n\n// Load modules\n\nconst Boom = require('boom');\n\n\n// Declare internals\n\nconst internals = {};\n\n\n/*\n    RFC 7231 Section 3.1.1.1\n\n    media-type = type \"/\" subtype *( OWS \";\" OWS parameter )\n    type       = token\n    subtype    = token\n    parameter  = token \"=\" ( token / quoted-string )\n*/\n\n//                             1: type/subtype    2: params\ninternals.contentTypeRegex = /^([^\\/\\s]+\\/[^\\s;]+)(.*)?$/;\n\n//                                        1: \"b\"   2: b\ninternals.paramsRegex = /;\\s*boundary=(?:\"([^\"]+)\"|([^;\"\\s]+))/i;\n\n\nexports.type = function (header) {\n\n    if (!header) {\n        throw Boom.badRequest('Invalid content-type header');\n    }\n\n    const match = header.match(internals.contentTypeRegex);\n    if (!match) {\n        throw Boom.badRequest('Invalid content-type header');\n    }\n\n    const result = {\n        mime: match[1].toLowerCase()\n    };\n\n    if (result.mime.indexOf('multipart/') === 0) {\n        const params = match[2];\n        if (params) {\n            const param = params.match(internals.paramsRegex);\n            if (param) {\n                result.boundary = param[1] || param[2];\n            }\n        }\n\n        if (!result.boundary) {\n            throw Boom.badRequest('Invalid content-type header: multipart missing boundary');\n        }\n    }\n\n    return result;\n};\n\n\n/*\n    RFC 6266 Section 4.1 (http://tools.ietf.org/html/rfc6266#section-4.1)\n\n    content-disposition = \"Content-Disposition\" \":\" disposition-type *( \";\" disposition-parm )\n    disposition-type    = \"inline\" | \"attachment\" | token                                           ; case-insensitive\n    disposition-parm    = filename-parm | token [ \"*\" ] \"=\" ( token | quoted-string | ext-value)    ; ext-value defined in [RFC5987], Section 3.2\n\n    Content-Disposition header field values with multiple instances of the same parameter name are invalid.\n\n    Note that due to the rules for implied linear whitespace (Section 2.1 of [RFC2616]), OPTIONAL whitespace\n    can appear between words (token or quoted-string) and separator characters.\n\n    Furthermore, note that the format used for ext-value allows specifying a natural language (e.g., \"en\"); this is of limited use\n    for filenames and is likely to be ignored by recipients.\n*/\n\n\ninternals.contentDispositionRegex = /^\\s*form-data\\s*(?:;\\s*(.+))?$/i;\n\n//                                        1: name     2: *            3: ext-value                      4: quoted  5: token\ninternals.contentDispositionParamRegex = /([^\\=\\*\\s]+)(\\*)?\\s*\\=\\s*(?:([^;'\"\\s]+\\'[\\w-]*\\'[^;\\s]+)|(?:\\\"([^\"]*)\\\")|([^;\\s]*))(?:\\s*(?:;\\s*)|$)/g;\n\nexports.disposition = function (header) {\n\n    if (!header) {\n        throw Boom.badRequest('Missing content-disposition header');\n    }\n\n    const match = header.match(internals.contentDispositionRegex);\n    if (!match) {\n        throw Boom.badRequest('Invalid content-disposition header format');\n    }\n\n    const parameters = match[1];\n    if (!parameters) {\n        throw Boom.badRequest('Invalid content-disposition header missing parameters');\n    }\n\n    const result = {};\n    parameters.replace(internals.contentDispositionParamRegex, ($0, $1, $2, $3, $4, $5) => {\n\n        if ($2) {\n            if (!$3) {\n                throw Boom.badRequest('Invalid content-disposition header format includes invalid parameters');\n            }\n\n            try {\n                result[$1] = decodeURIComponent($3.split('\\'')[2]);\n            }\n            catch (err) {\n                throw Boom.badRequest('Invalid content-disposition header format includes invalid parameters');\n            }\n        }\n        else {\n            result[$1] = $4 || $5 || '';\n        }\n    });\n\n    if (!result.name) {\n        throw Boom.badRequest('Invalid content-disposition header missing name parameter');\n    }\n\n    return result;\n};\n"},"lineCount":126}},"error":null,"hash":"e1eb1e30affb3094df25ad139cf95101","cacheData":{"env":{}}}