{"id":"../node_modules/markdown/lib/markdown.js","dependencies":[{"name":"C:\\Users\\ytgg\\Desktop\\React\\package.json","includedInParent":true,"mtime":1569047559418},{"name":"C:\\Users\\ytgg\\Desktop\\React\\node_modules\\markdown\\package.json","includedInParent":true,"mtime":1569047118420}],"generated":{"js":"// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function Markdown(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if (dialect in Markdown.dialects) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n}\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n}\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n}\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.toSource = function() {\n    return \"Markdown.mk_block( \" +\n            uneval(block) +\n            \", \" +\n            uneval(trail) +\n            \", \" +\n            uneval(line) +\n            \" )\"\n  }\n\n  if (line != undefined)\n    s.lineNumber = line;\n\n  return s;\n}\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;;\n  while ( ( i = str.indexOf('\\n', i+1) ) != -1) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  // [\\s\\S] matches _anything_ (newline or space)\n  var re = /([\\s\\S]+?)($|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) != null ) {\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n}\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n}\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n}\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array\n             ? source\n             : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root )\n      this.tree = old_tree;\n  }\n\n}\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if (typeof print !== \"undefined\")\n      print.apply( print, args );\n  if (typeof console !== \"undefined\" && typeof console.log !== \"undefined\")\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n}\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      var m = block.match( re );\n\n      if ( !m ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ) } );\n\n        if (b.length) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if (next.length) {\n          // Check the next block - it might be code too\n          var m = next[0].match( re );\n\n          if ( !m ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, '').substring(2) );\n\n          block = next.shift();\n        }\n        else\n          break block_search;\n      } while (true);\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if (loose) {\n            li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if (nl && li.length > 1) inline.unshift(nl);\n\n        for (var i=0; i < inline.length; i++) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if (is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" )\n          {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          break;\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if (last_li[1] instanceof Array && last_li[1][0] == \"para\") {\n          return;\n        }\n        if (i+1 == stack.length) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ];\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for (var line_no=0; line_no < lines.length; line_no++) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\" });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = stack.some(function(s, i) {\n                  if ( s.indent != m[1] ) return false;\n                  list = s.list;     // Found the level we want\n                  stack.splice(i+1); // Remove the others\n                  //print(\"found\");\n                  return true;       // And stop looping\n                });\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if (wanted_depth <= stack.length) {\n                    stack.splice(wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if (l.length > m[0].length) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if (contained.length > 0) {\n            // Make sure all listitems up the stack are paragraphs\n            stack.forEach( paragraphify, this );\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if (hr) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            stack.forEach( paragraphify , this );\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      }\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [];\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n        }\n\n        // reassemble!\n        block = lines.join( \"\\n\" );\n        jsonml.push.apply( jsonml, this.processBlock( prev.join( \"\\n\" ), [] ) );\n      }\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block += block.trailing + b;\n        block.trailing = b.trailing;\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, '' ),\n          old_tree = this.tree;\n      jsonml.push( this.toTree( input, [ \"blockquote\" ] ) );\n\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == '<' && m[2][m[2].length-1] == '>' )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if (m[4] !== undefined)\n          ref.title = m[4];\n        else if (m[5] !== undefined)\n          ref.title = m[5];\n\n      } );\n\n      if (b.length)\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n}\n\nMarkdown.dialects.Gruber.inline = {\n    __call__: function inline( text, patterns ) {\n      // Hmmm - should this function be directly in Md#processInline, or\n      // conversely, should Md#processBlock be moved into block.__call__ too\n      var out = [ ],\n          m,\n          // Look for the next occurange of a special character/pattern\n          re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns.source || patterns) + \")\", \"g\" ),\n          lastIndex = 0;\n\n      //D:var self = this;\n      //D:self.debug(\"processInline:\", uneval(text) );\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if (typeof x == \"string\" && typeof out[out.length-1] == \"string\")\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( ( m = re.exec(text) ) != null) {\n        if ( m[1] ) add( m[1] ); // Some un-interesting text matched\n        else        m[1] = { length: 0 }; // Or there was none, but make m[1].length == 0\n\n        var res;\n        if ( m[2] in this.dialect.inline ) {\n          res = this.dialect.inline[ m[2] ].call(\n                    this,\n                    text.substr( m.index + m[1].length ), m, out );\n        }\n        // Default for now to make dev easier. just slurp special and output it.\n        res = res || [ m[2].length, m[2] ];\n\n        var len = res.shift();\n        // Update how much input was consumed\n        re.lastIndex += ( len - m[2].length );\n\n        // Add children\n        res.forEach(add);\n\n        lastIndex = re.lastIndex;\n      }\n\n      // Add last 'boring' chunk\n      if ( text.length > lastIndex )\n        add( text.substr( lastIndex ) );\n\n      return out;\n    },\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( text.match( /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/ ) )\n        return [ 2, text[1] ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*(\\S*)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == '<' && m[2][m[2].length-1] == '>' )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] == this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), text: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^\\[([\\s\\S]*?)\\][ \\t]*\\([ \\t]*(\\S+)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == '<' && m[2][m[2].length-1] == '>' )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        // Process escapes only\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        var link = [ \"link\", attrs ];\n        Array.prototype.push.apply( link, this.processInline( m[1] ) );\n        return [ m[0].length, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      // [id]\n      m = text.match( /^\\[([\\s\\S]*?)\\](?: ?\\[(.*?)\\])?/ );\n\n      if ( m ) {\n        // [id] case, text == id\n        if ( m[2] === undefined || m[2] === \"\" ) m[2] = m[1];\n\n        attrs = { ref: m[ 2 ].toLowerCase(),  original: m[ 0 ] };\n        link = [ \"link_ref\", attrs ];\n        Array.prototype.push.apply( link, this.processInline( m[1] ) );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [\n          m[ 0 ].length,\n          link\n        ];\n      }\n\n      // Just consume the '['\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n}\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if (this[state_slot][0] == md) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if (last instanceof CloseTag) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  } // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n}\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    if (i == \"__call__\") continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if (pattern != undefined)\n      return fn.call(this, text, pattern);\n    else\n      return fn.call(this, text, patterns);\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {};\n  Block.prototype = d.block;\n  function Inline() {};\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n}\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n}\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = process_meta_hash( m[ 2 ] );\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ],\n        hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  var hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n}\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([^]+)$/,\n      list = [ \"dl\" ];\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( var i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( var i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = process_meta_hash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n}\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = expose.isArray = function(obj) {\n    return (obj instanceof Array || typeof obj === \"array\" || Array.isArray(obj));\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\nfunction process_meta_hash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr['class'] ) {\n        attr['class'] = attr['class'] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr['class'] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n}\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( arguments.callee( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if (typeof options.preprocessTreeNode === \"function\") {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( var i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      var i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[0] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  var i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n      i = 2;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = arguments.callee( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      arguments.callee( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/markdown/lib/markdown.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}}],"sources":{"../node_modules/markdown/lib/markdown.js":"// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function Markdown(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if (dialect in Markdown.dialects) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n}\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n}\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n}\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.toSource = function() {\n    return \"Markdown.mk_block( \" +\n            uneval(block) +\n            \", \" +\n            uneval(trail) +\n            \", \" +\n            uneval(line) +\n            \" )\"\n  }\n\n  if (line != undefined)\n    s.lineNumber = line;\n\n  return s;\n}\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;;\n  while ( ( i = str.indexOf('\\n', i+1) ) != -1) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  // [\\s\\S] matches _anything_ (newline or space)\n  var re = /([\\s\\S]+?)($|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) != null ) {\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n}\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n}\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n}\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array\n             ? source\n             : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root )\n      this.tree = old_tree;\n  }\n\n}\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if (typeof print !== \"undefined\")\n      print.apply( print, args );\n  if (typeof console !== \"undefined\" && typeof console.log !== \"undefined\")\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n}\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      var m = block.match( re );\n\n      if ( !m ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ) } );\n\n        if (b.length) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if (next.length) {\n          // Check the next block - it might be code too\n          var m = next[0].match( re );\n\n          if ( !m ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, '').substring(2) );\n\n          block = next.shift();\n        }\n        else\n          break block_search;\n      } while (true);\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if (loose) {\n            li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if (nl && li.length > 1) inline.unshift(nl);\n\n        for (var i=0; i < inline.length; i++) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if (is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" )\n          {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          break;\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if (last_li[1] instanceof Array && last_li[1][0] == \"para\") {\n          return;\n        }\n        if (i+1 == stack.length) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ];\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for (var line_no=0; line_no < lines.length; line_no++) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\" });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = stack.some(function(s, i) {\n                  if ( s.indent != m[1] ) return false;\n                  list = s.list;     // Found the level we want\n                  stack.splice(i+1); // Remove the others\n                  //print(\"found\");\n                  return true;       // And stop looping\n                });\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if (wanted_depth <= stack.length) {\n                    stack.splice(wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if (l.length > m[0].length) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if (contained.length > 0) {\n            // Make sure all listitems up the stack are paragraphs\n            stack.forEach( paragraphify, this );\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if (hr) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            stack.forEach( paragraphify , this );\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      }\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [];\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n        }\n\n        // reassemble!\n        block = lines.join( \"\\n\" );\n        jsonml.push.apply( jsonml, this.processBlock( prev.join( \"\\n\" ), [] ) );\n      }\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block += block.trailing + b;\n        block.trailing = b.trailing;\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, '' ),\n          old_tree = this.tree;\n      jsonml.push( this.toTree( input, [ \"blockquote\" ] ) );\n\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == '<' && m[2][m[2].length-1] == '>' )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if (m[4] !== undefined)\n          ref.title = m[4];\n        else if (m[5] !== undefined)\n          ref.title = m[5];\n\n      } );\n\n      if (b.length)\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n}\n\nMarkdown.dialects.Gruber.inline = {\n    __call__: function inline( text, patterns ) {\n      // Hmmm - should this function be directly in Md#processInline, or\n      // conversely, should Md#processBlock be moved into block.__call__ too\n      var out = [ ],\n          m,\n          // Look for the next occurange of a special character/pattern\n          re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns.source || patterns) + \")\", \"g\" ),\n          lastIndex = 0;\n\n      //D:var self = this;\n      //D:self.debug(\"processInline:\", uneval(text) );\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if (typeof x == \"string\" && typeof out[out.length-1] == \"string\")\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( ( m = re.exec(text) ) != null) {\n        if ( m[1] ) add( m[1] ); // Some un-interesting text matched\n        else        m[1] = { length: 0 }; // Or there was none, but make m[1].length == 0\n\n        var res;\n        if ( m[2] in this.dialect.inline ) {\n          res = this.dialect.inline[ m[2] ].call(\n                    this,\n                    text.substr( m.index + m[1].length ), m, out );\n        }\n        // Default for now to make dev easier. just slurp special and output it.\n        res = res || [ m[2].length, m[2] ];\n\n        var len = res.shift();\n        // Update how much input was consumed\n        re.lastIndex += ( len - m[2].length );\n\n        // Add children\n        res.forEach(add);\n\n        lastIndex = re.lastIndex;\n      }\n\n      // Add last 'boring' chunk\n      if ( text.length > lastIndex )\n        add( text.substr( lastIndex ) );\n\n      return out;\n    },\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( text.match( /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/ ) )\n        return [ 2, text[1] ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*(\\S*)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == '<' && m[2][m[2].length-1] == '>' )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] == this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), text: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^\\[([\\s\\S]*?)\\][ \\t]*\\([ \\t]*(\\S+)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == '<' && m[2][m[2].length-1] == '>' )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        // Process escapes only\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        var link = [ \"link\", attrs ];\n        Array.prototype.push.apply( link, this.processInline( m[1] ) );\n        return [ m[0].length, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      // [id]\n      m = text.match( /^\\[([\\s\\S]*?)\\](?: ?\\[(.*?)\\])?/ );\n\n      if ( m ) {\n        // [id] case, text == id\n        if ( m[2] === undefined || m[2] === \"\" ) m[2] = m[1];\n\n        attrs = { ref: m[ 2 ].toLowerCase(),  original: m[ 0 ] };\n        link = [ \"link_ref\", attrs ];\n        Array.prototype.push.apply( link, this.processInline( m[1] ) );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [\n          m[ 0 ].length,\n          link\n        ];\n      }\n\n      // Just consume the '['\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n}\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if (this[state_slot][0] == md) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if (last instanceof CloseTag) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  } // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n}\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    if (i == \"__call__\") continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if (pattern != undefined)\n      return fn.call(this, text, pattern);\n    else\n      return fn.call(this, text, patterns);\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {};\n  Block.prototype = d.block;\n  function Inline() {};\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n}\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n}\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = process_meta_hash( m[ 2 ] );\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ],\n        hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  var hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n}\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([^]+)$/,\n      list = [ \"dl\" ];\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( var i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( var i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = process_meta_hash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n}\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = expose.isArray = function(obj) {\n    return (obj instanceof Array || typeof obj === \"array\" || Array.isArray(obj));\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\nfunction process_meta_hash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr['class'] ) {\n        attr['class'] = attr['class'] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr['class'] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n}\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( arguments.callee( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if (typeof options.preprocessTreeNode === \"function\") {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( var i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      var i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[0] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  var i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n      i = 2;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = arguments.callee( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      arguments.callee( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n"},"lineCount":1467}},"error":null,"hash":"f8f84e9958e87b2f1e83fb04ebd3b59c","cacheData":{"env":{}}}